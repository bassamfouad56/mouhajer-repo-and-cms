// Mouhajer CMS Database Schema
// Using PostgreSQL with Prisma Accelerate

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("mouhajerCms_PRISMA_DATABASE_URL")
  directUrl = env("mouhajerCms_DATABASE_URL")
}

// Users - Authentication and Authorization
model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password      String   // Hashed password
  role          String   @default("editor") // admin, editor, viewer
  avatar        String?
  active        Boolean  @default(true)
  lastLoginAt   DateTime? @map("last_login_at")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  activityLogs  ActivityLog[]

  @@map("users")
  @@index([email])
  @@index([role])
  @@index([active])
}

// Activity Logs - Audit Trail
model ActivityLog {
  id          String   @id @default(uuid())
  userId      String   @map("user_id")
  action      String   // create, update, delete, login, logout
  resource    String   // project, service, blog, page, media, settings, user
  resourceId  String?  @map("resource_id")
  details     Json?    // Additional details about the action
  ipAddress   String?  @map("ip_address")
  userAgent   String?  @map("user_agent") @db.Text
  createdAt   DateTime @default(now()) @map("created_at")

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("activity_logs")
  @@index([userId])
  @@index([action])
  @@index([resource])
  @@index([createdAt])
}

// Projects
model Project {
  id          String   @id @default(uuid())
  titleEn     String   @map("title_en")
  titleAr     String   @map("title_ar")
  descriptionEn String @map("description_en") @db.Text
  descriptionAr String @map("description_ar") @db.Text
  images      String[] // Array of image URLs
  category    String
  featured    Boolean  @default(false)
  status      String   @default("published") // published, draft
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("projects")
  @@index([featured])
  @@index([category])
  @@index([status])
}

// Services
model Service {
  id          String   @id @default(uuid())
  titleEn     String   @map("title_en")
  titleAr     String   @map("title_ar")
  slugEn      String?  @unique @map("slug_en")
  slugAr      String?  @unique @map("slug_ar")
  descriptionEn String @map("description_en") @db.Text
  descriptionAr String @map("description_ar") @db.Text
  shortDescriptionEn String @map("short_description_en") @db.Text
  shortDescriptionAr String @map("short_description_ar") @db.Text
  icon        String?
  images      String[] // Array of image URLs
  featuresEn  String[] @map("features_en")
  featuresAr  String[] @map("features_ar")
  price       String?
  duration    String?
  featured    Boolean  @default(false)
  status      String   @default("published")

  // SEO Fields
  seoMetaTitleEn     String?  @map("seo_meta_title_en")
  seoMetaTitleAr     String?  @map("seo_meta_title_ar")
  seoMetaDescEn      String?  @map("seo_meta_desc_en") @db.Text
  seoMetaDescAr      String?  @map("seo_meta_desc_ar") @db.Text
  seoKeywordsEn      String[] @map("seo_keywords_en")
  seoKeywordsAr      String[] @map("seo_keywords_ar")
  targetLocations    String[] @map("target_locations") // Dubai, Abu Dhabi, etc.
  serviceArea        String[] @map("service_area") // Specific neighborhoods/areas

  // Additional Features
  faqs               Json?    // Array of {question, answer} objects in EN/AR
  relatedServiceIds  String[] @map("related_service_ids")

  // Analytics
  viewCount          Int      @default(0) @map("view_count")
  averageRating      Float?   @map("average_rating")

  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("services")
  @@index([slugEn])
  @@index([slugAr])
  @@index([featured])
  @@index([status])
  @@index([targetLocations])
}

// Blog Posts
model BlogPost {
  id            String   @id @default(uuid())
  titleEn       String   @map("title_en")
  titleAr       String   @map("title_ar")
  slugEn        String   @unique @map("slug_en")
  slugAr        String   @unique @map("slug_ar")
  excerptEn     String   @map("excerpt_en") @db.Text
  excerptAr     String   @map("excerpt_ar") @db.Text
  contentEn     String   @map("content_en") @db.Text
  contentAr     String   @map("content_ar") @db.Text
  featuredImage String?  @map("featured_image")
  category      String?
  tags          String[]
  author        String?
  publishedAt   DateTime? @map("published_at")
  featured      Boolean  @default(false)
  status        String   @default("draft") // draft, published
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@map("blog_posts")
  @@index([slugEn])
  @@index([slugAr])
  @@index([featured])
  @@index([status])
  @@index([category])
}

// Pages
model Page {
  id                 String      @id @default(uuid())
  titleEn            String      @map("title_en")
  titleAr            String      @map("title_ar")
  slugEn             String      @unique @map("slug_en")
  slugAr             String      @unique @map("slug_ar")
  descriptionEn      String      @map("description_en") @db.Text
  descriptionAr      String      @map("description_ar") @db.Text
  parentId           String?     @map("parent_id")
  seoMetaTitleEn     String?     @map("seo_meta_title_en")
  seoMetaTitleAr     String?     @map("seo_meta_title_ar")
  seoMetaDescEn      String?     @map("seo_meta_desc_en") @db.Text
  seoMetaDescAr      String?     @map("seo_meta_desc_ar") @db.Text
  seoKeywords        String[]    @map("seo_keywords")
  status             String      @default("draft") // draft, published
  featured           Boolean     @default(false)
  createdAt          DateTime    @default(now()) @map("created_at")
  updatedAt          DateTime    @updatedAt @map("updated_at")
  blocks             PageBlock[]

  parent             Page?       @relation("PageChildren", fields: [parentId], references: [id], onDelete: SetNull)
  children           Page[]      @relation("PageChildren")

  @@map("pages")
  @@index([slugEn])
  @@index([slugAr])
  @@index([status])
  @@index([featured])
  @@index([parentId])
}

// Page Blocks
model PageBlock {
  id        String   @id @default(uuid())
  pageId    String   @map("page_id")
  type      String   // hero_banner, about_section, projects_section, etc.
  data      Json     // Flexible JSON data for block content
  order     Int      @default(0)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  page      Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)

  @@map("page_blocks")
  @@index([pageId])
  @@index([order])
}

// Media Files
model MediaFile {
  id          String   @id @default(uuid())
  filename    String
  originalName String  @map("original_name")
  url         String   @unique // Vercel Blob URL
  thumbnailUrl String? @map("thumbnail_url")
  mimeType    String   @map("mime_type")
  size        Int      // File size in bytes
  width       Int?
  height      Int?
  alt         String?  @db.Text
  type        String   // image, video, document
  tags        String[] @default([])
  uploadedAt  DateTime @default(now()) @map("uploaded_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("media_files")
  @@index([type])
  @@index([mimeType])
}

// Settings (Singleton)
model Settings {
  id                    String   @id @default("default")
  siteNameEn            String   @map("site_name_en")
  siteNameAr            String   @map("site_name_ar")
  siteDescriptionEn     String   @map("site_description_en") @db.Text
  siteDescriptionAr     String   @map("site_description_ar") @db.Text
  contactEmail          String?  @map("contact_email")
  contactPhone          String?  @map("contact_phone")
  contactAddressEn      String?  @map("contact_address_en") @db.Text
  contactAddressAr      String?  @map("contact_address_ar") @db.Text
  socialFacebook        String?  @map("social_facebook")
  socialInstagram       String?  @map("social_instagram")
  socialTwitter         String?  @map("social_twitter")
  socialLinkedin        String?  @map("social_linkedin")
  socialYoutube         String?  @map("social_youtube")
  seoMetaTitleEn        String?  @map("seo_meta_title_en")
  seoMetaTitleAr        String?  @map("seo_meta_title_ar")
  seoMetaDescriptionEn  String?  @map("seo_meta_description_en") @db.Text
  seoMetaDescriptionAr  String?  @map("seo_meta_description_ar") @db.Text
  seoKeywords           String[] @map("seo_keywords")
  primaryColor          String?  @map("primary_color")
  logoUrl               String?  @map("logo_url")
  faviconUrl            String?  @map("favicon_url")
  updatedAt             DateTime @updatedAt @map("updated_at")

  @@map("settings")
}

// Advertisements
model Advertisement {
  id                String   @id @default(uuid())
  titleEn           String   @map("title_en")
  titleAr           String   @map("title_ar")
  descriptionEn     String?  @map("description_en") @db.Text
  descriptionAr     String?  @map("description_ar") @db.Text
  image             String?
  videoUrl          String?  @map("video_url")
  linkUrl           String   @map("link_url")
  ctaTextEn         String?  @map("cta_text_en")
  ctaTextAr         String?  @map("cta_text_ar")
  zone              String   // header, sidebar, footer, inline, popup, banner
  type              String   // image, video, html
  htmlContentEn     String?  @map("html_content_en") @db.Text
  htmlContentAr     String?  @map("html_content_ar") @db.Text
  startDate         DateTime @map("start_date")
  endDate           DateTime @map("end_date")
  alwaysActive      Boolean  @default(false) @map("always_active")
  pages             String[] // Which pages to show on
  showOnAllPages    Boolean  @default(false) @map("show_on_all_pages")
  priority          Int      @default(0)
  clickCount        Int      @default(0) @map("click_count")
  impressionCount   Int      @default(0) @map("impression_count")
  maxImpressions    Int?     @map("max_impressions")
  active            Boolean  @default(true)
  featured          Boolean  @default(false)
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@map("advertisements")
  @@index([zone])
  @@index([active])
  @@index([featured])
  @@index([priority])
  @@index([startDate, endDate])
}

// Navigation Menu Items
model NavItem {
  id            String     @id @default(uuid())
  labelEn       String     @map("label_en")
  labelAr       String     @map("label_ar")
  url           String?    // Link URL (null for dropdowns)
  type          String     // link, dropdown, mega_menu
  icon          String?    // Optional icon name/URL
  target        String     @default("_self") // _self, _blank
  parentId      String?    @map("parent_id")
  order         Int        @default(0)
  isActive      Boolean    @default(true) @map("is_active")
  openInNewTab  Boolean    @default(false) @map("open_in_new_tab")
  cssClass      String?    @map("css_class")
  badge         String?    // Badge text (e.g., "New", "Hot")
  badgeColor    String?    @map("badge_color")
  description   String?    @db.Text // For mega menus

  // Mega menu specific fields
  megaMenuColumns Int?    @map("mega_menu_columns") // Number of columns
  megaMenuImage   String? @map("mega_menu_image") // Featured image for mega menu

  // Permissions & visibility
  requiresAuth  Boolean   @default(false) @map("requires_auth")
  requiredRoles String[]  @map("required_roles") @default([])

  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  parent        NavItem?  @relation("NavItemChildren", fields: [parentId], references: [id], onDelete: Cascade)
  children      NavItem[] @relation("NavItemChildren")

  @@map("nav_items")
  @@index([parentId])
  @@index([order])
  @@index([isActive])
  @@index([type])
}

// Project Handoff - Engineer to Marketing (2025 Best Practices)
model ProjectHandoff {
  id                  String   @id @default(uuid())
  projectId           String   @unique @map("project_id")

  // Step 1: Project Overview & Technical Details
  completionDate      DateTime? @map("completion_date")
  duration            String?  // e.g., "3 months"
  techStack           String[] @map("tech_stack") @default([]) // React, Next.js, Prisma, etc.
  liveUrl             String?  @map("live_url") // Live demo link
  repositoryUrl       String?  @map("repository_url") // GitHub/GitLab link
  projectHighlightsEn String[] @map("project_highlights_en") @default([]) // Key features for marketing
  projectHighlightsAr String[] @map("project_highlights_ar") @default([])

  // Step 2: Problem-Solution-Results (Case Study Narrative)
  problemStatementEn  String?  @map("problem_statement_en") @db.Text // What challenge was being solved?
  problemStatementAr  String?  @map("problem_statement_ar") @db.Text
  solutionApproachEn  String?  @map("solution_approach_en") @db.Text // How was it solved?
  solutionApproachAr  String?  @map("solution_approach_ar") @db.Text
  measurableResults   String[] @map("measurable_results") @default([]) // "50% faster load time", "30% increase in conversions"
  performanceMetrics  Json?    @map("performance_metrics") // { loadTime: "1.2s", lighthouse: 95, etc. }
  uniqueFeaturesEn    String?  @map("unique_features_en") @db.Text
  uniqueFeaturesAr    String?  @map("unique_features_ar") @db.Text

  // Step 3: Visual Assets
  screenshots         String[] @default([]) // High-quality PNG screenshots
  beforePhotos        String[] @map("before_photos") @default([])
  afterPhotos         String[] @map("after_photos") @default([]) // For before/after comparisons
  videoLinks          String[] @map("video_links") @default([]) // Demo videos, walkthroughs
  figmaLinks          String[] @map("figma_links") @default([]) // Design files

  // Step 4: Client & Social Proof
  clientName          String?  @map("client_name")
  clientCompany       String?  @map("client_company")
  clientTestimonialEn String?  @map("client_testimonial_en") @db.Text
  clientTestimonialAr String?  @map("client_testimonial_ar") @db.Text
  clientRating        Int?     @map("client_rating") // 1-5 stars
  useClientName       Boolean  @default(false) @map("use_client_name")
  useClientPhotos     Boolean  @default(true) @map("use_client_photos")
  allowReference      Boolean  @default(false) @map("allow_reference")
  pressMentions       String[] @map("press_mentions") @default([]) // URLs to articles/features
  awards              String[] @default([])
  teamCredits         String[] @map("team_credits") @default([]) // Simplified team attribution

  // Step 5: Marketing Strategy & SEO
  targetKeywords      String[] @map("target_keywords") @default([])
  seoMetaDescEn       String?  @map("seo_meta_desc_en") // 150-160 chars, optimized
  seoMetaDescAr       String?  @map("seo_meta_desc_ar")
  targetAudience      String[] @map("target_audience") @default([])
  recommendedPlatforms String[] @map("recommended_platforms") @default([]) // Instagram, LinkedIn, Website
  geographicFocus     String[] @map("geographic_focus") @default([])
  keySellingPoints    String[] @map("key_selling_points") @default([])

  // Workflow
  status              String   @default("draft") // draft, submitted, approved, published
  submittedBy         String?  @map("submitted_by") // User ID
  submittedAt         DateTime? @map("submitted_at")
  approvedBy          String?  @map("approved_by") // Marketing team user ID
  approvedAt          DateTime? @map("approved_at")
  notes               String?  @db.Text // Internal notes

  // Timestamps
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")

  @@map("project_handoffs")
  @@index([projectId])
  @@index([status])
  @@index([submittedBy])
  @@index([approvedBy])
}

// ====================================
// CRM MODELS - Phase 1
// ====================================

// Companies - B2B Clients
model Company {
  id                 String    @id @default(uuid())
  nameEn             String    @map("name_en")
  nameAr             String?   @map("name_ar")
  industry           String?
  size               String?   // small, medium, large, enterprise
  website            String?
  logo               String?

  // Contact information
  email              String?
  phone              String?
  whatsapp           String?

  // Address
  addressEn          String?   @map("address_en") @db.Text
  addressAr          String?   @map("address_ar") @db.Text
  city               String?
  area               String?   // Neighborhood/district
  country            String    @default("UAE")

  // Classification
  type               String    @default("client") // client, partner, vendor, competitor
  vip                Boolean   @default(false)
  tags               String[]  @default([])

  // Social media
  linkedin           String?
  instagram          String?
  facebook           String?

  // Notes
  notesEn            String?   @map("notes_en") @db.Text
  notesAr            String?   @map("notes_ar") @db.Text

  // Ownership
  assignedTo         String?   @map("assigned_to") // User ID

  // Timestamps
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")

  // Relations
  contacts           Contact[]
  deals              Deal[]
  leads              Lead[]

  @@map("companies")
  @@index([city])
  @@index([type])
  @@index([vip])
  @@index([assignedTo])
}

// Contacts - Individual Clients & Leads
model Contact {
  id                 String    @id @default(uuid())

  // Basic Info
  firstName          String    @map("first_name")
  lastName           String    @map("last_name")
  fullNameAr         String?   @map("full_name_ar")

  // Contact Details
  email              String?
  phone              String
  whatsapp           String?

  // Company Relationship
  companyId          String?   @map("company_id")
  position           String?   // Job title/position

  // Address
  addressEn          String?   @map("address_en") @db.Text
  addressAr          String?   @map("address_ar") @db.Text
  city               String?
  area               String?
  country            String    @default("UAE")

  // Classification
  type               String    @default("individual") // individual, business
  status             String    @default("active") // active, inactive, blocked
  source             String?   // website, referral, social_media, walk_in, phone
  vip                Boolean   @default(false)
  tags               String[]  @default([])

  // Preferences (Interior Design Specific)
  preferredStyle     String[]  @map("preferred_style") @default([]) // modern, classic, minimalist, luxury
  budgetRange        String?   @map("budget_range") // economical, mid_range, luxury, ultra_luxury
  projectType        String[]  @map("project_type") @default([]) // villa, apartment, office, restaurant, retail
  propertySize       String?   @map("property_size") // Square meters or feet
  timeline           String?   // Expected project timeline

  // Social Media
  linkedin           String?
  instagram          String?
  facebook           String?

  // Language Preference
  preferredLanguage  String    @default("en") @map("preferred_language") // en, ar

  // Notes
  notesEn            String?   @map("notes_en") @db.Text
  notesAr            String?   @map("notes_ar") @db.Text

  // Ownership
  assignedTo         String?   @map("assigned_to") // User ID

  // Timestamps
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")
  lastContactedAt    DateTime? @map("last_contacted_at")

  // Relations
  company            Company?  @relation(fields: [companyId], references: [id], onDelete: SetNull)
  deals              Deal[]
  tasks              Task[]
  activities         CrmActivity[]

  @@map("contacts")
  @@index([email])
  @@index([phone])
  @@index([companyId])
  @@index([type])
  @@index([status])
  @@index([vip])
  @@index([assignedTo])
  @@index([city])
  @@index([source])
}

// Leads - Potential Clients
model Lead {
  id                 String    @id @default(uuid())

  // Basic Info
  name               String
  email              String?
  phone              String

  // Company (optional for B2B)
  companyId          String?   @map("company_id")
  companyName        String?   @map("company_name")

  // Lead Details
  source             String    // website, referral, social_media, walk_in, phone, advertisement, event
  status             String    @default("new") // new, contacted, qualified, proposal, won, lost
  score              Int       @default(0) // 0-100 lead scoring

  // Project Information
  projectType        String    @map("project_type") // villa, apartment, office, restaurant, retail, commercial
  budgetRange        String?   @map("budget_range") // economical, mid_range, luxury, ultra_luxury
  propertySize       String?   @map("property_size")
  timeline           String?   // immediate, 1_month, 3_months, 6_months, flexible

  // Location
  city               String?
  area               String?

  // Interest
  interestedIn       String[]  @map("interested_in") @default([]) // full_design, consultation, turnkey, renovation
  stylePreference    String[]  @map("style_preference") @default([]) // modern, classic, minimalist, luxury

  // Message/Notes
  message            String?   @db.Text
  notesEn            String?   @map("notes_en") @db.Text
  notesAr            String?   @map("notes_ar") @db.Text

  // Qualification
  qualified          Boolean   @default(false)
  qualifiedAt        DateTime? @map("qualified_at")
  disqualifiedReason String?   @map("disqualified_reason") @db.Text

  // Follow-up
  nextFollowUpDate   DateTime? @map("next_follow_up_date")
  lastContactedAt    DateTime? @map("last_contacted_at")

  // Conversion
  convertedToContact Boolean   @default(false) @map("converted_to_contact")
  convertedToDeal    Boolean   @default(false) @map("converted_to_deal")
  convertedAt        DateTime? @map("converted_at")

  // Ownership
  assignedTo         String?   @map("assigned_to") // User ID

  // Timestamps
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")

  // Relations
  company            Company?  @relation(fields: [companyId], references: [id], onDelete: SetNull)
  tasks              Task[]
  activities         CrmActivity[]

  @@map("leads")
  @@index([status])
  @@index([source])
  @@index([qualified])
  @@index([assignedTo])
  @@index([score])
  @@index([createdAt])
  @@index([nextFollowUpDate])
}

// Deals - Sales Pipeline
model Deal {
  id                 String    @id @default(uuid())

  // Basic Info
  titleEn            String    @map("title_en")
  titleAr            String?   @map("title_ar")

  // Client
  contactId          String    @map("contact_id")
  companyId          String?   @map("company_id")

  // Deal Details
  value              Float     // Deal value in AED
  currency           String    @default("AED")

  // Pipeline
  stage              String    // initial_consultation, site_visit, quotation_sent, quotation_review, proposal, negotiation, contract_sent, won, lost
  probability        Int       @default(50) // 0-100%
  source             String?   // Where the deal came from

  // Project Info
  projectType        String    @map("project_type")
  propertySize       String?   @map("property_size")
  location           String?
  city               String?
  area               String?

  // Timeline
  expectedCloseDate  DateTime? @map("expected_close_date")
  actualCloseDate    DateTime? @map("actual_close_date")

  // Outcome
  wonReason          String?   @map("won_reason") @db.Text
  lostReason         String?   @map("lost_reason") @db.Text
  competitors        String[]  @default([])

  // Notes
  notesEn            String?   @map("notes_en") @db.Text
  notesAr            String?   @map("notes_ar") @db.Text

  // Documents
  quotationIds       String[]  @map("quotation_ids") @default([])
  proposalIds        String[]  @map("proposal_ids") @default([])
  contractIds        String[]  @map("contract_ids") @default([])

  // Ownership
  assignedTo         String?   @map("assigned_to") // User ID

  // Tags
  tags               String[]  @default([])

  // Timestamps
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")

  // Relations
  contact            Contact   @relation(fields: [contactId], references: [id], onDelete: Cascade)
  company            Company?  @relation(fields: [companyId], references: [id], onDelete: SetNull)
  tasks              Task[]
  activities         CrmActivity[]

  @@map("deals")
  @@index([contactId])
  @@index([companyId])
  @@index([stage])
  @@index([assignedTo])
  @@index([expectedCloseDate])
  @@index([createdAt])
}

// Tasks - Follow-ups and Activities
model Task {
  id                 String    @id @default(uuid())

  // Task Details
  title              String
  description        String?   @db.Text
  type               String    // call, email, meeting, site_visit, follow_up, proposal, quotation

  // Related To
  relatedTo          String    @map("related_to") // lead, contact, deal, project
  relatedId          String    @map("related_id")
  leadId             String?   @map("lead_id")
  contactId          String?   @map("contact_id")
  dealId             String?   @map("deal_id")

  // Assignment
  assignedTo         String    @map("assigned_to") // User ID

  // Schedule
  dueDate            DateTime  @map("due_date")
  dueTime            String?   @map("due_time") // HH:MM format
  completedAt        DateTime? @map("completed_at")

  // Priority
  priority           String    @default("medium") // low, medium, high, urgent

  // Status
  status             String    @default("pending") // pending, in_progress, completed, cancelled

  // Reminder
  reminder           Boolean   @default(false)
  reminderMinutes    Int?      @map("reminder_minutes") // Minutes before due time

  // Notes
  notes              String?   @db.Text
  completionNotes    String?   @map("completion_notes") @db.Text

  // Timestamps
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")

  // Relations
  lead               Lead?     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  contact            Contact?  @relation(fields: [contactId], references: [id], onDelete: Cascade)
  deal               Deal?     @relation(fields: [dealId], references: [id], onDelete: Cascade)

  @@map("tasks")
  @@index([assignedTo])
  @@index([dueDate])
  @@index([status])
  @@index([priority])
  @@index([relatedTo, relatedId])
  @@index([leadId])
  @@index([contactId])
  @@index([dealId])
}

// CRM Activities - Interaction Tracking
model CrmActivity {
  id                 String    @id @default(uuid())

  // Activity Details
  type               String    // call, email, meeting, site_visit, quotation_sent, proposal_sent, contract_signed, note
  title              String
  description        String?   @db.Text

  // Related To
  relatedTo          String    @map("related_to") // lead, contact, deal, project
  relatedId          String    @map("related_id")
  leadId             String?   @map("lead_id")
  contactId          String?   @map("contact_id")
  dealId             String?   @map("deal_id")

  // User who performed the activity
  userId             String    @map("user_id")

  // Activity Metadata
  duration           Int?      // Duration in minutes (for calls/meetings)
  outcome            String?   // positive, neutral, negative

  // Timestamps
  activityDate       DateTime  @default(now()) @map("activity_date")
  createdAt          DateTime  @default(now()) @map("created_at")

  // Relations
  lead               Lead?     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  contact            Contact?  @relation(fields: [contactId], references: [id], onDelete: Cascade)
  deal               Deal?     @relation(fields: [dealId], references: [id], onDelete: Cascade)

  @@map("crm_activities")
  @@index([relatedTo, relatedId])
  @@index([leadId])
  @@index([contactId])
  @@index([dealId])
  @@index([userId])
  @@index([type])
  @@index([activityDate])
}

// ====================================
// AI ROOM REDESIGN - Interior Design Feature
// ====================================

// Room Redesign - AI-Powered Interior Design Transformations
model RoomRedesign {
  id                 String          @id @default(uuid())

  // User identification (email-only, no account required)
  email              String

  // Magic link verification
  verificationToken  String          @unique @map("verification_token")
  tokenExpiry        DateTime        @map("token_expiry")

  // Processing status
  status             RedesignStatus  @default(PROCESSING)

  // File paths on external drive
  originalImagePath  String          @map("original_image_path")
  generatedImagePath String?         @map("generated_image_path")

  // Optional CDN URLs (if files are uploaded to cloud storage later)
  originalImageUrl   String?         @map("original_image_url")
  generatedImageUrl  String?         @map("generated_image_url")

  // AI generation parameters
  prompt             String?         @db.Text // User's custom prompt/description
  stylePreference    String?         @map("style_preference") // modern, minimalist, industrial, etc.
  roomType           String?         @map("room_type") // living_room, bedroom, kitchen, etc.

  // AI model metadata
  aiModel            String          @default("flux-schnell") @map("ai_model") // Track which model was used
  inferenceSteps     Int?            @map("inference_steps") // Number of inference steps used
  processingTime     Int?            @map("processing_time") // Processing time in seconds

  // Error tracking
  errorMessage       String?         @map("error_message") @db.Text
  retryCount         Int             @default(0) @map("retry_count")

  // Analytics
  viewCount          Int             @default(0) @map("view_count")
  sharedCount        Int             @default(0) @map("shared_count")
  downloadCount      Int             @default(0) @map("download_count")

  // Feedback
  userRating         Int?            @map("user_rating") // 1-5 stars
  userFeedback       String?         @map("user_feedback") @db.Text

  // Timestamps
  createdAt          DateTime        @default(now()) @map("created_at")
  updatedAt          DateTime        @updatedAt @map("updated_at")
  viewedAt           DateTime?       @map("viewed_at") // First view timestamp
  completedAt        DateTime?       @map("completed_at") // When AI generation completed

  @@map("room_redesigns")
  @@index([email])
  @@index([verificationToken])
  @@index([status])
  @@index([createdAt])
  @@index([tokenExpiry])
}

// ====================================
// TESTIMONIALS - Client Reviews
// ====================================

// Testimonials - Client reviews and feedback
model Testimonial {
  id              String   @id @default(uuid())

  // Client information
  name            String
  role            String?   // Client's role/profession
  company         String?   // Client's company (optional)

  // Review content
  commentEn       String   @map("comment_en") @db.Text
  commentAr       String?  @map("comment_ar") @db.Text
  rating          Int      // 1-5 stars

  // Project details
  projectTitle    String?  @map("project_title")
  projectType     String?  @map("project_type") // villa, apartment, office, etc.

  // Visual assets
  clientImage     String?  @map("client_image") // Client photo
  projectImage    String?  @map("project_image") // Project photo

  // Metadata
  locale          String   @default("en") // en, ar
  featured        Boolean  @default(false)
  published       Boolean  @default(true)

  // Review date
  reviewDate      DateTime @default(now()) @map("review_date")

  // Timestamps
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("testimonials")
  @@index([locale])
  @@index([rating])
  @@index([featured])
  @@index([published])
  @@index([reviewDate])
}

// ====================================
// FAQ - Frequently Asked Questions
// ====================================

// FAQ - Frequently Asked Questions
model FAQ {
  id              String   @id @default(uuid())

  // Question and answer (bilingual)
  questionEn      String   @map("question_en") @db.Text
  questionAr      String?  @map("question_ar") @db.Text
  answerEn        String   @map("answer_en") @db.Text
  answerAr        String?  @map("answer_ar") @db.Text

  // Organization
  category        String?  // general, services, pricing, process, technical
  order           Int      @default(0) // Display order within category

  // Metadata
  locale          String   @default("en") // en, ar
  featured        Boolean  @default(false) // Show on homepage/featured section
  published       Boolean  @default(true)

  // SEO
  keywords        String[] @default([]) // Related search terms

  // Analytics
  viewCount       Int      @default(0) @map("view_count")
  helpfulCount    Int      @default(0) @map("helpful_count") // "Was this helpful?" votes

  // Timestamps
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("faqs")
  @@index([locale])
  @@index([category])
  @@index([featured])
  @@index([published])
  @@index([order])
}

// ====================================
// TEAM MEMBERS
// ====================================

// Team Members - Company team profiles
model TeamMember {
  id              String   @id @default(uuid())

  // Basic information (bilingual)
  nameEn          String   @map("name_en")
  nameAr          String?  @map("name_ar")
  roleEn          String   @map("role_en") // e.g., "Lead Interior Designer"
  roleAr          String?  @map("role_ar")

  // Biography (bilingual)
  bioEn           String   @map("bio_en") @db.Text
  bioAr           String?  @map("bio_ar") @db.Text

  // Professional details
  specialties     String[] @default([]) // e.g., ["Modern Design", "Luxury Interiors", "Space Planning"]
  yearsExperience Int?     @map("years_experience")
  education       String?  @db.Text // Educational background
  certifications  String[] @default([]) // Professional certifications

  // Visual assets
  profileImage    String?  @map("profile_image") // Profile photo
  coverImage      String?  @map("cover_image") // Optional cover/banner image

  // Contact & Social
  email           String?
  phone           String?
  linkedin        String?
  instagram       String?
  behance         String?
  portfolio       String?  // Personal portfolio URL

  // Organization
  department      String?  // Design, Architecture, Project Management, etc.
  order           Int      @default(0) // Display order

  // Metadata
  locale          String   @default("en") // en, ar
  featured        Boolean  @default(false) // Show on homepage/leadership team
  published       Boolean  @default(true)

  // Timestamps
  joinedAt        DateTime? @map("joined_at") // Join date with company
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("team_members")
  @@index([locale])
  @@index([department])
  @@index([featured])
  @@index([published])
  @@index([order])
}

// ====================================
// PRICING PLANS
// ====================================

// Pricing Plans - Service packages and pricing tiers
model PricingPlan {
  id              String   @id @default(uuid())

  // Plan name (bilingual)
  nameEn          String   @map("name_en")
  nameAr          String?  @map("name_ar")

  // Plan description (bilingual)
  descriptionEn   String   @map("description_en") @db.Text
  descriptionAr   String?  @map("description_ar") @db.Text

  // Pricing details
  price           Float?   // Base price (null if custom pricing)
  currency        String   @default("AED")
  pricingModel    String   @default("fixed") @map("pricing_model") // fixed, hourly, percentage, custom
  pricePrefix     String?  @map("price_prefix") // e.g., "Starting from", "From"
  priceSuffix     String?  @map("price_suffix") // e.g., "/project", "/hour", "/sqft"

  // Plan tier
  tier            String   // basic, professional, premium, enterprise, custom
  popular         Boolean  @default(false) // Highlight as "Most Popular"
  recommended     Boolean  @default(false) // Recommended badge

  // Features (bilingual arrays)
  featuresEn      String[] @map("features_en")
  featuresAr      String[] @map("features_ar")

  // What's included
  includedServices String[] @map("included_services") @default([])
  deliverables    String[] @default([])

  // Limitations (what's NOT included)
  limitations     String[] @default([])

  // Additional details
  minProjectSize  String?  @map("min_project_size") // e.g., "500 sqft"
  maxProjectSize  String?  @map("max_project_size") // e.g., "2000 sqft"
  estimatedTimeline String? @map("estimated_timeline") // e.g., "4-6 weeks"

  // Call-to-action
  ctaTextEn       String   @default("Get Started") @map("cta_text_en")
  ctaTextAr       String?  @default("ابدأ الآن") @map("cta_text_ar")
  ctaLink         String?  @map("cta_link") // Custom CTA link

  // Visual
  icon            String?  // Icon identifier
  color           String?  // Hex color for UI theming
  badge           String?  // Optional badge text (e.g., "Best Value")

  // Organization
  order           Int      @default(0) // Display order

  // Metadata
  locale          String   @default("en") // en, ar
  featured        Boolean  @default(false)
  published       Boolean  @default(true)

  // Timestamps
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("pricing_plans")
  @@index([locale])
  @@index([tier])
  @@index([popular])
  @@index([featured])
  @@index([published])
  @@index([order])
}

// ====================================
// CASE STUDIES - Project Showcases
// ====================================

// Case Studies - Showcase successful projects
model CaseStudy {
  id              String   @id @default(uuid())

  // Project title (bilingual)
  titleEn         String   @map("title_en")
  titleAr         String?  @map("title_ar")

  // Project summary (bilingual)
  summaryEn       String   @map("summary_en") @db.Text
  summaryAr       String?  @map("summary_ar") @db.Text

  // Client information
  clientName      String?  @map("client_name")
  clientType      String?  @map("client_type") // residential, commercial, hospitality
  showClientName  Boolean  @default(false) @map("show_client_name")

  // Project details
  projectType     String   @map("project_type") // villa, apartment, office, restaurant
  location        String?
  projectSize     String?  @map("project_size")
  completionDate  DateTime? @map("completion_date")
  duration        String?

  // Challenge-Solution-Results narrative
  challengeEn     String   @map("challenge_en") @db.Text
  challengeAr     String?  @map("challenge_ar") @db.Text
  solutionEn      String   @map("solution_en") @db.Text
  solutionAr      String?  @map("solution_ar") @db.Text
  resultsEn       String   @map("results_en") @db.Text
  resultsAr       String?  @map("results_ar") @db.Text

  // Visual assets
  heroImage       String?  @map("hero_image")
  beforeImages    String[] @map("before_images") @default([])
  afterImages     String[] @map("after_images") @default([])
  gallery         String[] @default([])
  videoUrl        String?  @map("video_url")

  // Project features
  features        String[] @default([])
  stylesTags      String[] @map("styles_tags") @default([])

  // Metrics
  budget          Float?
  budgetSaved     Float?   @map("budget_saved")
  timelineMet     Boolean  @default(true) @map("timeline_met")
  clientSatisfaction Int?  @map("client_satisfaction")

  // Team
  teamMembers     String[] @map("team_members") @default([])
  contractors     String[] @default([])

  // SEO
  keywords        String[] @default([])
  tags            String[] @default([])

  // Organization
  order           Int      @default(0)

  // Metadata
  locale          String   @default("en")
  featured        Boolean  @default(false)
  published       Boolean  @default(true)

  // Timestamps
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("case_studies")
  @@index([locale])
  @@index([projectType])
  @@index([featured])
  @@index([published])
  @@index([order])
  @@index([completionDate])
}

// Enum for redesign status tracking
enum RedesignStatus {
  UPLOADING       // File is being uploaded
  PROCESSING      // AI is generating the redesign
  COMPLETED       // Successfully generated
  FAILED          // Generation failed
  EXPIRED         // Link has expired
}
