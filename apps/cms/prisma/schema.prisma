generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("PRISMA_DATABASE_URL")
  directUrl = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  name          String
  email         String        @unique
  password      String
  role          String        @default("editor")
  avatar        String?
  active        Boolean       @default(true)
  lastLoginAt   DateTime?     @map("last_login_at")
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")
  activityLogs  ActivityLog[]
  crmActivities CrmActivity[]

  @@index([email])
  @@index([role])
  @@index([active])
  @@map("users")
}

model ActivityLog {
  id         String   @id @default(uuid())
  userId     String   @map("user_id")
  action     String
  resource   String
  resourceId String?  @map("resource_id")
  details    Json?
  ipAddress  String?  @map("ip_address")
  userAgent  String?  @map("user_agent")
  createdAt  DateTime @default(now()) @map("created_at")
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([action])
  @@index([resource])
  @@index([createdAt])
  @@map("activity_logs")
}

model Project {
  id            String   @id @default(uuid())
  titleEn       String   @map("title_en")
  titleAr       String   @map("title_ar")
  descriptionEn String   @map("description_en")
  descriptionAr String   @map("description_ar")
  images        String[]
  category      String
  featured      Boolean  @default(false)
  status        String   @default("published")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@index([featured])
  @@index([category])
  @@index([status])
  @@map("projects")
}

model Service {
  id                 String   @id @default(uuid())
  titleEn            String   @map("title_en")
  titleAr            String   @map("title_ar")
  descriptionEn      String   @map("description_en")
  descriptionAr      String   @map("description_ar")
  shortDescriptionEn String   @map("short_description_en")
  shortDescriptionAr String   @map("short_description_ar")
  icon               String?
  featuresEn         String[] @map("features_en")
  featuresAr         String[] @map("features_ar")
  price              String?
  duration           String?
  featured           Boolean  @default(false)
  status             String   @default("published")
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")
  averageRating      Float?   @map("average_rating")
  faqs               Json?
  images             String[]
  relatedServiceIds  String[] @map("related_service_ids")
  seoKeywordsAr      String[] @map("seo_keywords_ar")
  seoKeywordsEn      String[] @map("seo_keywords_en")
  seoMetaDescAr      String?  @map("seo_meta_desc_ar")
  seoMetaDescEn      String?  @map("seo_meta_desc_en")
  seoMetaTitleAr     String?  @map("seo_meta_title_ar")
  seoMetaTitleEn     String?  @map("seo_meta_title_en")
  serviceArea        String[] @map("service_area")
  slugAr             String?  @unique @map("slug_ar")
  slugEn             String?  @unique @map("slug_en")
  targetLocations    String[] @map("target_locations")
  viewCount          Int      @default(0) @map("view_count")

  @@index([slugEn])
  @@index([slugAr])
  @@index([featured])
  @@index([status])
  @@index([targetLocations])
  @@map("services")
}

model BlogPost {
  id            String    @id @default(uuid())
  titleEn       String    @map("title_en")
  titleAr       String    @map("title_ar")
  slugEn        String    @unique @map("slug_en")
  slugAr        String    @unique @map("slug_ar")
  excerptEn     String    @map("excerpt_en")
  excerptAr     String    @map("excerpt_ar")
  contentEn     String    @map("content_en")
  contentAr     String    @map("content_ar")
  featuredImage String?   @map("featured_image")
  category      String?
  tags          String[]
  author        String?
  publishedAt   DateTime? @map("published_at")
  featured      Boolean   @default(false)
  status        String    @default("draft")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  @@index([slugEn])
  @@index([slugAr])
  @@index([featured])
  @@index([status])
  @@index([category])
  @@map("blog_posts")
}

model Page {
  id             String      @id @default(uuid())
  titleEn        String      @map("title_en")
  titleAr        String      @map("title_ar")
  slugEn         String      @unique @map("slug_en")
  slugAr         String      @unique @map("slug_ar")
  descriptionEn  String      @map("description_en")
  descriptionAr  String      @map("description_ar")
  seoMetaTitleEn String?     @map("seo_meta_title_en")
  seoMetaTitleAr String?     @map("seo_meta_title_ar")
  seoMetaDescEn  String?     @map("seo_meta_desc_en")
  seoMetaDescAr  String?     @map("seo_meta_desc_ar")
  seoKeywords    String[]    @map("seo_keywords")
  status         String      @default("draft")
  featured       Boolean     @default(false)
  createdAt      DateTime    @default(now()) @map("created_at")
  updatedAt      DateTime    @updatedAt @map("updated_at")
  parentId       String?     @map("parent_id")
  blocks         PageBlock[]
  parent         Page?       @relation("PageChildren", fields: [parentId], references: [id])
  children       Page[]      @relation("PageChildren")

  @@index([slugEn])
  @@index([slugAr])
  @@index([status])
  @@index([featured])
  @@index([parentId])
  @@map("pages")
}

model PageBlock {
  id        String   @id @default(uuid())
  pageId    String   @map("page_id")
  type      String
  data      Json
  order     Int      @default(0)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  page      Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)

  @@index([pageId])
  @@index([order])
  @@map("page_blocks")
}

model MediaFile {
  id           String   @id @default(uuid())
  filename     String
  originalName String   @map("original_name")
  url          String   @unique
  thumbnailUrl String?  @map("thumbnail_url")
  mimeType     String   @map("mime_type")
  size         Int
  width        Int?
  height       Int?
  alt          String?
  type         String
  uploadedAt   DateTime @default(now()) @map("uploaded_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  tags         String[] @default([])

  @@index([type])
  @@index([mimeType])
  @@map("media_files")
}

model Settings {
  id                   String   @id @default("default")
  siteNameEn           String   @map("site_name_en")
  siteNameAr           String   @map("site_name_ar")
  siteDescriptionEn    String   @map("site_description_en")
  siteDescriptionAr    String   @map("site_description_ar")
  contactEmail         String?  @map("contact_email")
  contactPhone         String?  @map("contact_phone")
  contactAddressEn     String?  @map("contact_address_en")
  contactAddressAr     String?  @map("contact_address_ar")
  socialFacebook       String?  @map("social_facebook")
  socialInstagram      String?  @map("social_instagram")
  socialTwitter        String?  @map("social_twitter")
  socialLinkedin       String?  @map("social_linkedin")
  socialYoutube        String?  @map("social_youtube")
  seoMetaTitleEn       String?  @map("seo_meta_title_en")
  seoMetaTitleAr       String?  @map("seo_meta_title_ar")
  seoMetaDescriptionEn String?  @map("seo_meta_description_en")
  seoMetaDescriptionAr String?  @map("seo_meta_description_ar")
  seoKeywords          String[] @map("seo_keywords")
  primaryColor         String?  @map("primary_color")
  logoUrl              String?  @map("logo_url")
  faviconUrl           String?  @map("favicon_url")
  updatedAt            DateTime @updatedAt @map("updated_at")

  @@map("settings")
}

model Advertisement {
  id              String   @id @default(uuid())
  titleEn         String   @map("title_en")
  titleAr         String   @map("title_ar")
  descriptionEn   String?  @map("description_en")
  descriptionAr   String?  @map("description_ar")
  image           String?
  videoUrl        String?  @map("video_url")
  linkUrl         String   @map("link_url")
  ctaTextEn       String?  @map("cta_text_en")
  ctaTextAr       String?  @map("cta_text_ar")
  zone            String
  type            String
  htmlContentEn   String?  @map("html_content_en")
  htmlContentAr   String?  @map("html_content_ar")
  startDate       DateTime @map("start_date")
  endDate         DateTime @map("end_date")
  alwaysActive    Boolean  @default(false) @map("always_active")
  pages           String[]
  showOnAllPages  Boolean  @default(false) @map("show_on_all_pages")
  priority        Int      @default(0)
  clickCount      Int      @default(0) @map("click_count")
  impressionCount Int      @default(0) @map("impression_count")
  maxImpressions  Int?     @map("max_impressions")
  active          Boolean  @default(true)
  featured        Boolean  @default(false)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@index([zone])
  @@index([active])
  @@index([featured])
  @@index([priority])
  @@index([startDate, endDate])
  @@map("advertisements")
}

model NavItem {
  id              String    @id @default(uuid())
  labelEn         String    @map("label_en")
  labelAr         String    @map("label_ar")
  url             String?
  type            String
  location        String    @default("header") // "header" or "footer"
  icon            String?
  target          String    @default("_self")
  parentId        String?   @map("parent_id")
  order           Int       @default(0)
  isActive        Boolean   @default(true) @map("is_active")
  openInNewTab    Boolean   @default(false) @map("open_in_new_tab")
  cssClass        String?   @map("css_class")
  badge           String?
  badgeColor      String?   @map("badge_color")
  description     String?
  megaMenuColumns Int?      @map("mega_menu_columns")
  megaMenuImage   String?   @map("mega_menu_image")
  requiresAuth    Boolean   @default(false) @map("requires_auth")
  requiredRoles   String[]  @default([]) @map("required_roles")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")
  parent          NavItem?  @relation("NavItemChildren", fields: [parentId], references: [id], onDelete: Cascade)
  children        NavItem[] @relation("NavItemChildren")

  @@index([parentId])
  @@index([order])
  @@index([isActive])
  @@index([type])
  @@index([location])
  @@map("nav_items")
}

model ProjectHandoff {
  id                   String    @id @default(uuid())
  projectId            String    @unique @map("project_id")
  completionDate       DateTime? @map("completion_date")
  duration             String?
  clientName           String?   @map("client_name")
  clientCompany        String?   @map("client_company")
  clientTestimonialEn  String?   @map("client_testimonial_en")
  clientTestimonialAr  String?   @map("client_testimonial_ar")
  clientRating         Int?      @map("client_rating")
  useClientName        Boolean   @default(false) @map("use_client_name")
  useClientPhotos      Boolean   @default(true) @map("use_client_photos")
  allowReference       Boolean   @default(false) @map("allow_reference")
  uniqueFeaturesEn     String?   @map("unique_features_en")
  uniqueFeaturesAr     String?   @map("unique_features_ar")
  awards               String[]  @default([])
  beforePhotos         String[]  @default([]) @map("before_photos")
  videoLinks           String[]  @default([]) @map("video_links")
  targetKeywords       String[]  @default([]) @map("target_keywords")
  targetAudience       String[]  @default([]) @map("target_audience")
  geographicFocus      String[]  @default([]) @map("geographic_focus")
  status               String    @default("draft")
  submittedBy          String?   @map("submitted_by")
  submittedAt          DateTime? @map("submitted_at")
  approvedBy           String?   @map("approved_by")
  approvedAt           DateTime? @map("approved_at")
  notes                String?
  createdAt            DateTime  @default(now()) @map("created_at")
  updatedAt            DateTime  @updatedAt @map("updated_at")
  afterPhotos          String[]  @default([]) @map("after_photos")
  figmaLinks           String[]  @default([]) @map("figma_links")
  keySellingPoints     String[]  @default([]) @map("key_selling_points")
  liveUrl              String?   @map("live_url")
  measurableResults    String[]  @default([]) @map("measurable_results")
  performanceMetrics   Json?     @map("performance_metrics")
  pressMentions        String[]  @default([]) @map("press_mentions")
  problemStatementAr   String?   @map("problem_statement_ar")
  problemStatementEn   String?   @map("problem_statement_en")
  projectHighlightsAr  String[]  @default([]) @map("project_highlights_ar")
  projectHighlightsEn  String[]  @default([]) @map("project_highlights_en")
  recommendedPlatforms String[]  @default([]) @map("recommended_platforms")
  repositoryUrl        String?   @map("repository_url")
  screenshots          String[]  @default([])
  seoMetaDescAr        String?   @map("seo_meta_desc_ar")
  seoMetaDescEn        String?   @map("seo_meta_desc_en")
  solutionApproachAr   String?   @map("solution_approach_ar")
  solutionApproachEn   String?   @map("solution_approach_en")
  teamCredits          String[]  @default([]) @map("team_credits")
  techStack            String[]  @default([]) @map("tech_stack")

  @@index([projectId])
  @@index([status])
  @@index([submittedBy])
  @@index([approvedBy])
  @@map("project_handoffs")
}

model Company {
  id         String    @id @default(uuid())
  nameEn     String    @map("name_en")
  nameAr     String?   @map("name_ar")
  industry   String?
  size       String?
  website    String?
  logo       String?
  email      String?
  phone      String?
  whatsapp   String?
  addressEn  String?   @map("address_en")
  addressAr  String?   @map("address_ar")
  city       String?
  area       String?
  country    String    @default("UAE")
  type       String    @default("client")
  vip        Boolean   @default(false)
  tags       String[]  @default([])
  linkedin   String?
  instagram  String?
  facebook   String?
  notesEn    String?   @map("notes_en")
  notesAr    String?   @map("notes_ar")
  assignedTo String?   @map("assigned_to")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  contacts   Contact[]
  deals      Deal[]
  leads      Lead[]

  @@index([city])
  @@index([type])
  @@index([vip])
  @@index([assignedTo])
  @@map("companies")
}

model Contact {
  id                String        @id @default(uuid())
  firstName         String        @map("first_name")
  lastName          String        @map("last_name")
  fullNameAr        String?       @map("full_name_ar")
  email             String?
  phone             String
  whatsapp          String?
  companyId         String?       @map("company_id")
  position          String?
  addressEn         String?       @map("address_en")
  addressAr         String?       @map("address_ar")
  city              String?
  area              String?
  country           String        @default("UAE")
  type              String        @default("individual")
  status            String        @default("active")
  source            String?
  vip               Boolean       @default(false)
  tags              String[]      @default([])
  preferredStyle    String[]      @default([]) @map("preferred_style")
  budgetRange       String?       @map("budget_range")
  projectType       String[]      @default([]) @map("project_type")
  propertySize      String?       @map("property_size")
  timeline          String?
  linkedin          String?
  instagram         String?
  facebook          String?
  preferredLanguage String        @default("en") @map("preferred_language")
  notesEn           String?       @map("notes_en")
  notesAr           String?       @map("notes_ar")
  assignedTo        String?       @map("assigned_to")
  createdAt         DateTime      @default(now()) @map("created_at")
  updatedAt         DateTime      @updatedAt @map("updated_at")
  lastContactedAt   DateTime?     @map("last_contacted_at")
  company           Company?      @relation(fields: [companyId], references: [id])
  activities        CrmActivity[]
  deals             Deal[]
  tasks             Task[]

  @@index([email])
  @@index([phone])
  @@index([companyId])
  @@index([type])
  @@index([status])
  @@index([vip])
  @@index([assignedTo])
  @@index([city])
  @@index([source])
  @@map("contacts")
}

model Lead {
  id                 String        @id @default(uuid())
  name               String
  email              String?
  phone              String
  companyId          String?       @map("company_id")
  companyName        String?       @map("company_name")
  source             String
  status             String        @default("new")
  score              Int           @default(0)
  projectType        String        @map("project_type")
  budgetRange        String?       @map("budget_range")
  propertySize       String?       @map("property_size")
  timeline           String?
  city               String?
  area               String?
  interestedIn       String[]      @default([]) @map("interested_in")
  stylePreference    String[]      @default([]) @map("style_preference")
  message            String?
  notesEn            String?       @map("notes_en")
  notesAr            String?       @map("notes_ar")
  qualified          Boolean       @default(false)
  qualifiedAt        DateTime?     @map("qualified_at")
  disqualifiedReason String?       @map("disqualified_reason")
  nextFollowUpDate   DateTime?     @map("next_follow_up_date")
  lastContactedAt    DateTime?     @map("last_contacted_at")
  convertedToContact Boolean       @default(false) @map("converted_to_contact")
  convertedToDeal    Boolean       @default(false) @map("converted_to_deal")
  convertedAt        DateTime?     @map("converted_at")
  assignedTo         String?       @map("assigned_to")
  createdAt          DateTime      @default(now()) @map("created_at")
  updatedAt          DateTime      @updatedAt @map("updated_at")
  activities         CrmActivity[]
  company            Company?      @relation(fields: [companyId], references: [id])
  tasks              Task[]

  @@index([status])
  @@index([source])
  @@index([qualified])
  @@index([assignedTo])
  @@index([score])
  @@index([createdAt])
  @@index([nextFollowUpDate])
  @@map("leads")
}

model Deal {
  id                String        @id @default(uuid())
  titleEn           String        @map("title_en")
  titleAr           String?       @map("title_ar")
  contactId         String        @map("contact_id")
  companyId         String?       @map("company_id")
  value             Float
  currency          String        @default("AED")
  stage             String
  probability       Int           @default(50)
  source            String?
  projectType       String        @map("project_type")
  propertySize      String?       @map("property_size")
  location          String?
  city              String?
  area              String?
  expectedCloseDate DateTime?     @map("expected_close_date")
  actualCloseDate   DateTime?     @map("actual_close_date")
  wonReason         String?       @map("won_reason")
  lostReason        String?       @map("lost_reason")
  competitors       String[]      @default([])
  notesEn           String?       @map("notes_en")
  notesAr           String?       @map("notes_ar")
  quotationIds      String[]      @default([]) @map("quotation_ids")
  proposalIds       String[]      @default([]) @map("proposal_ids")
  contractIds       String[]      @default([]) @map("contract_ids")
  assignedTo        String?       @map("assigned_to")
  tags              String[]      @default([])
  createdAt         DateTime      @default(now()) @map("created_at")
  updatedAt         DateTime      @updatedAt @map("updated_at")
  activities        CrmActivity[]
  company           Company?      @relation(fields: [companyId], references: [id])
  contact           Contact       @relation(fields: [contactId], references: [id], onDelete: Cascade)
  tasks             Task[]

  @@index([contactId])
  @@index([companyId])
  @@index([stage])
  @@index([assignedTo])
  @@index([expectedCloseDate])
  @@index([createdAt])
  @@map("deals")
}

model Task {
  id              String    @id @default(uuid())
  title           String
  description     String?
  type            String
  relatedTo       String    @map("related_to")
  relatedId       String    @map("related_id")
  leadId          String?   @map("lead_id")
  contactId       String?   @map("contact_id")
  dealId          String?   @map("deal_id")
  assignedTo      String    @map("assigned_to")
  dueDate         DateTime  @map("due_date")
  dueTime         String?   @map("due_time")
  completedAt     DateTime? @map("completed_at")
  priority        String    @default("medium")
  status          String    @default("pending")
  reminder        Boolean   @default(false)
  reminderMinutes Int?      @map("reminder_minutes")
  notes           String?
  completionNotes String?   @map("completion_notes")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")
  contact         Contact?  @relation(fields: [contactId], references: [id], onDelete: Cascade)
  deal            Deal?     @relation(fields: [dealId], references: [id], onDelete: Cascade)
  lead            Lead?     @relation(fields: [leadId], references: [id], onDelete: Cascade)

  @@index([assignedTo])
  @@index([dueDate])
  @@index([status])
  @@index([priority])
  @@index([relatedTo, relatedId])
  @@index([leadId])
  @@index([contactId])
  @@index([dealId])
  @@map("tasks")
}

model CrmActivity {
  id           String   @id @default(uuid())
  type         String
  title        String
  description  String?
  relatedTo    String   @map("related_to")
  relatedId    String   @map("related_id")
  leadId       String?  @map("lead_id")
  contactId    String?  @map("contact_id")
  dealId       String?  @map("deal_id")
  userId       String   @map("user_id")
  stage        String?
  metadata     Json?
  duration     Int?
  outcome      String?
  activityDate DateTime @default(now()) @map("activity_date")
  createdAt    DateTime @default(now()) @map("created_at")
  contact      Contact? @relation(fields: [contactId], references: [id], onDelete: Cascade)
  deal         Deal?    @relation(fields: [dealId], references: [id], onDelete: Cascade)
  lead         Lead?    @relation(fields: [leadId], references: [id], onDelete: Cascade)
  user         User     @relation(fields: [userId], references: [id])

  @@index([relatedTo, relatedId])
  @@index([leadId])
  @@index([contactId])
  @@index([dealId])
  @@index([userId])
  @@index([type])
  @@index([stage])
  @@index([activityDate])
  @@map("crm_activities")
}

model RoomRedesign {
  id                 String         @id @default(uuid())
  email              String
  verificationToken  String         @unique @map("verification_token")
  tokenExpiry        DateTime       @map("token_expiry")
  status             RedesignStatus @default(PROCESSING)
  originalImagePath  String         @map("original_image_path")
  generatedImagePath String?        @map("generated_image_path")
  originalImageUrl   String?        @map("original_image_url")
  generatedImageUrl  String?        @map("generated_image_url")
  prompt             String?
  stylePreference    String?        @map("style_preference")
  roomType           String?        @map("room_type")
  aiModel            String         @default("flux-schnell") @map("ai_model")
  inferenceSteps     Int?           @map("inference_steps")
  processingTime     Int?           @map("processing_time")
  errorMessage       String?        @map("error_message")
  retryCount         Int            @default(0) @map("retry_count")
  viewCount          Int            @default(0) @map("view_count")
  sharedCount        Int            @default(0) @map("shared_count")
  downloadCount      Int            @default(0) @map("download_count")
  userRating         Int?           @map("user_rating")
  userFeedback       String?        @map("user_feedback")
  createdAt          DateTime       @default(now()) @map("created_at")
  updatedAt          DateTime       @updatedAt @map("updated_at")
  viewedAt           DateTime?      @map("viewed_at")
  completedAt        DateTime?      @map("completed_at")

  @@index([email])
  @@index([verificationToken])
  @@index([status])
  @@index([createdAt])
  @@index([tokenExpiry])
  @@map("room_redesigns")
}

model Testimonial {
  id           String   @id @default(uuid())
  name         String
  role         String?
  company      String?
  commentEn    String   @map("comment_en")
  commentAr    String?  @map("comment_ar")
  rating       Int
  projectTitle String?  @map("project_title")
  projectType  String?  @map("project_type")
  clientImage  String?  @map("client_image")
  projectImage String?  @map("project_image")
  locale       String   @default("en")
  featured     Boolean  @default(false)
  published    Boolean  @default(true)
  reviewDate   DateTime @default(now()) @map("review_date")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@index([locale])
  @@index([rating])
  @@index([featured])
  @@index([published])
  @@index([reviewDate])
  @@map("testimonials")
}

model FAQ {
  id           String   @id @default(uuid())
  questionEn   String   @map("question_en")
  questionAr   String?  @map("question_ar")
  answerEn     String   @map("answer_en")
  answerAr     String?  @map("answer_ar")
  category     String?
  order        Int      @default(0)
  locale       String   @default("en")
  featured     Boolean  @default(false)
  published    Boolean  @default(true)
  keywords     String[] @default([])
  viewCount    Int      @default(0) @map("view_count")
  helpfulCount Int      @default(0) @map("helpful_count")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@index([locale])
  @@index([category])
  @@index([featured])
  @@index([published])
  @@index([order])
  @@map("faqs")
}

model TeamMember {
  id              String    @id @default(uuid())
  nameEn          String    @map("name_en")
  nameAr          String?   @map("name_ar")
  roleEn          String    @map("role_en")
  roleAr          String?   @map("role_ar")
  bioEn           String    @map("bio_en")
  bioAr           String?   @map("bio_ar")
  specialties     String[]  @default([])
  yearsExperience Int?      @map("years_experience")
  education       String?
  certifications  String[]  @default([])
  profileImage    String?   @map("profile_image")
  coverImage      String?   @map("cover_image")
  email           String?
  phone           String?
  linkedin        String?
  instagram       String?
  behance         String?
  portfolio       String?
  department      String?
  order           Int       @default(0)
  locale          String    @default("en")
  featured        Boolean   @default(false)
  published       Boolean   @default(true)
  joinedAt        DateTime? @map("joined_at")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")

  @@index([locale])
  @@index([department])
  @@index([featured])
  @@index([published])
  @@index([order])
  @@map("team_members")
}

model PricingPlan {
  id                String   @id @default(uuid())
  nameEn            String   @map("name_en")
  nameAr            String?  @map("name_ar")
  descriptionEn     String   @map("description_en")
  descriptionAr     String?  @map("description_ar")
  price             Float?
  currency          String   @default("AED")
  pricingModel      String   @default("fixed") @map("pricing_model")
  pricePrefix       String?  @map("price_prefix")
  priceSuffix       String?  @map("price_suffix")
  tier              String
  popular           Boolean  @default(false)
  recommended       Boolean  @default(false)
  featuresEn        String[] @map("features_en")
  featuresAr        String[] @map("features_ar")
  includedServices  String[] @default([]) @map("included_services")
  deliverables      String[] @default([])
  limitations       String[] @default([])
  minProjectSize    String?  @map("min_project_size")
  maxProjectSize    String?  @map("max_project_size")
  estimatedTimeline String?  @map("estimated_timeline")
  ctaTextEn         String   @default("Get Started") @map("cta_text_en")
  ctaTextAr         String?  @default("ابدأ الآن") @map("cta_text_ar")
  ctaLink           String?  @map("cta_link")
  icon              String?
  color             String?
  badge             String?
  order             Int      @default(0)
  locale            String   @default("en")
  featured          Boolean  @default(false)
  published         Boolean  @default(true)
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@index([locale])
  @@index([tier])
  @@index([popular])
  @@index([featured])
  @@index([published])
  @@index([order])
  @@map("pricing_plans")
}

model CaseStudy {
  id                 String    @id @default(uuid())
  titleEn            String    @map("title_en")
  titleAr            String?   @map("title_ar")
  summaryEn          String    @map("summary_en")
  summaryAr          String?   @map("summary_ar")
  clientName         String?   @map("client_name")
  clientType         String?   @map("client_type")
  showClientName     Boolean   @default(false) @map("show_client_name")
  projectType        String    @map("project_type")
  location           String?
  projectSize        String?   @map("project_size")
  completionDate     DateTime? @map("completion_date")
  duration           String?
  challengeEn        String    @map("challenge_en")
  challengeAr        String?   @map("challenge_ar")
  solutionEn         String    @map("solution_en")
  solutionAr         String?   @map("solution_ar")
  resultsEn          String    @map("results_en")
  resultsAr          String?   @map("results_ar")
  heroImage          String?   @map("hero_image")
  beforeImages       String[]  @default([]) @map("before_images")
  afterImages        String[]  @default([]) @map("after_images")
  gallery            String[]  @default([])
  videoUrl           String?   @map("video_url")
  features           String[]  @default([])
  stylesTags         String[]  @default([]) @map("styles_tags")
  budget             Float?
  budgetSaved        Float?    @map("budget_saved")
  timelineMet        Boolean   @default(true) @map("timeline_met")
  clientSatisfaction Int?      @map("client_satisfaction")
  teamMembers        String[]  @default([]) @map("team_members")
  contractors        String[]  @default([])
  keywords           String[]  @default([])
  tags               String[]  @default([])
  order              Int       @default(0)
  locale             String    @default("en")
  featured           Boolean   @default(false)
  published          Boolean   @default(true)
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")

  @@index([locale])
  @@index([projectType])
  @@index([featured])
  @@index([published])
  @@index([order])
  @@index([completionDate])
  @@map("case_studies")
}

enum RedesignStatus {
  UPLOADING
  PROCESSING
  COMPLETED
  FAILED
  EXPIRED
}
